plugins {
    id 'dev.architectury.loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version "2.2.10"
}

group = project.maven_group
version = project.mod_version

base {
    archivesName = project.archives_name
}
def generatedResources = file("src/generated")
sourceSets {
    main {
        resources.srcDir generatedResources
    }
}
loom {
    forge {
        mixinConfig 'xeno_early_start.mixins.json'
    }
    runs {
        data {
            data()
            programArgs "--all", "--mod", "progression_mod"
            programArgs "--output", generatedResources.absolutePath
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
        client {
            vmArgs "-XX:+AllowEnhancedClassRedefinition"
            vmArg "-Dmixin.debug=true"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
    }
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven { url "https://maven.shedaniel.me/" }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
    mavenCentral()
    maven {
        name = "Kotlin for Forge"
        setUrl("https://thedarkcolour.github.io/KotlinForForge/")
    }
}

dependencies {
    minecraft "net.minecraft:minecraft:$project.minecraft_version"
    mappings "net.fabricmc:yarn:$project.yarn_mappings:v2"
    forge "net.minecraftforge:forge:$project.forge_version"
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${project.mixin_extras_version}"))
    implementation(include("io.github.llamalad7:mixinextras-forge:${project.mixin_extras_version}"))
    modApi "me.shedaniel.cloth:cloth-config-forge:$project.cloth_config_version"
    modCompileOnlyApi("dev.emi:emi-forge:$project.emi_version:api")
    modRuntimeOnly("dev.emi:emi-forge:$project.emi_version")
    modImplementation("maven.modrinth:better-combat:$project.better_combat_version-forge")
    modImplementation("dev.kosmx.player-anim:player-animation-lib-forge:${project.player_animator_version}")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'thedarkcolour:kotlinforforge:4.10.0'
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

// Configure Maven publishing.
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
kotlin {
    jvmToolchain(17)
}